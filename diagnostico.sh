#!/bin/bash
# DIAGN√ìSTICO DOS CONTAINERS - AUTOMACAO
# Execute este script no servidor 172.18.1.32

echo "================== DIAGN√ìSTICO AUTOMACAO =================="
echo "Data: $(date)"
echo "Servidor: $(hostname) - $(hostname -I)"
echo ""

echo "üîç 1. STATUS DOS CONTAINERS:"
echo "----------------------------------------"
docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
echo ""

echo "üîç 2. CONTAINERS COM PROBLEMAS:"
echo "----------------------------------------"
docker ps -a --filter "status=exited" --format "table {{.Names}}\t{{.Status}}\t{{.CreatedAt}}"
echo ""

echo "üîç 3. HEALTH CHECKS:"
echo "----------------------------------------"
echo "Frontend (port 3000):"
curl -s -o /dev/null -w "HTTP %{http_code} - Tempo: %{time_total}s\n" http://localhost:3000/health || echo "‚ùå FALHOU"

echo "Grafana (port 4000):"
curl -s -o /dev/null -w "HTTP %{http_code} - Tempo: %{time_total}s\n" http://localhost:4000/api/health || echo "‚ùå FALHOU"

echo "Prometheus (port 9090):"
curl -s -o /dev/null -w "HTTP %{http_code} - Tempo: %{time_total}s\n" http://localhost:9090/-/healthy || echo "‚ùå FALHOU"

echo "Backend API (port 3001):"
curl -s -o /dev/null -w "HTTP %{http_code} - Tempo: %{time_total}s\n" http://localhost:3001/health || echo "‚ùå FALHOU"

echo "Nginx (port 80):"
curl -s -o /dev/null -w "HTTP %{http_code} - Tempo: %{time_total}s\n" http://localhost:80/health || echo "‚ùå FALHOU"

echo "Nginx HTTPS (port 443):"
curl -s -k -o /dev/null -w "HTTP %{http_code} - Tempo: %{time_total}s\n" https://localhost:443/health || echo "‚ùå FALHOU"
echo ""

echo "üîç 4. PORTAS EM USO:"
echo "----------------------------------------"
netstat -tulpn | grep -E ':(80|443|3000|3001|4000|9090)' | head -10
echo ""

echo "üîç 5. LOGS DOS PRINCIPAIS CONTAINERS:"
echo "----------------------------------------"
echo "=== NGINX LOGS (√∫ltimas 5 linhas) ==="
docker logs nginx --tail 5 2>/dev/null || echo "‚ùå Container nginx n√£o encontrado"
echo ""

echo "=== PROMETHEUS LOGS (√∫ltimas 5 linhas) ==="
docker logs prometheus --tail 5 2>/dev/null || echo "‚ùå Container prometheus n√£o encontrado"
echo ""

echo "=== FRONTEND LOGS (√∫ltimas 5 linhas) ==="
docker logs frontend --tail 5 2>/dev/null || echo "‚ùå Container frontend n√£o encontrado"
echo ""

echo "üîç 6. VOLUMES E REDES:"
echo "----------------------------------------"
echo "=== REDES DOCKER ==="
docker network ls | grep cmm

echo "=== VOLUMES ==="
docker volume ls | grep -E "(postgres|prometheus|grafana|frontend)"
echo ""

echo "üîç 7. CERTIFICADOS SSL:"
echo "----------------------------------------"
if [ -d "/opt/docker/certificados" ]; then
    echo "‚úÖ Diret√≥rio de certificados existe:"
    ls -la /opt/docker/certificados/
else
    echo "‚ùå Diret√≥rio de certificados N√ÉO existe: /opt/docker/certificados"
fi
echo ""

echo "üîç 8. TESTE DNS:"
echo "----------------------------------------"
echo "Resolvendo automacao.cmm.am.gov.br:"
nslookup automacao.cmm.am.gov.br || echo "‚ùå DNS n√£o resolve"
echo ""

echo "üîç 9. ARQUIVO DOCKER-COMPOSE:"
echo "----------------------------------------"
if [ -f "docker-compose.yml" ]; then
    echo "‚úÖ docker-compose.yml encontrado"
    echo "Servi√ßos definidos:"
    grep -E "^  [a-zA-Z]" docker-compose.yml | sed 's/:$//' | sed 's/^  /- /'
else
    echo "‚ùå docker-compose.yml N√ÉO encontrado no diret√≥rio atual"
    echo "Diret√≥rio atual: $(pwd)"
fi
echo ""

echo "================== FIM DO DIAGN√ìSTICO =================="