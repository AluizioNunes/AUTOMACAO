version: '3.9'

networks:
  cmm_network:
    driver: bridge

services:
  nginx:
    build:
      context: ./Backend/nginx
      dockerfile: Dockerfile
    container_name: NGINX
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - nginx_logs:/var/log/nginx
      - /opt/docker/certificados/cmm_am_gov_br_inter.crt:/etc/ssl/certs/server.crt:ro
      - /opt/docker/certificados/cmm_am_gov_br.key:/etc/ssl/certs/server.key:ro
    networks:
      - cmm_network
    depends_on:
      - frontend
      - api_nestjs
      - api_fastapi
      - postgresql
    environment:
      - TZ=America/Manaus

  api_nestjs:
    build:
      context: ./Backend/NestJS
      dockerfile: Dockerfile
    container_name: NESTJS
    restart: unless-stopped
    expose:
      - "3002"
    networks:
      - cmm_network
    environment:
      - NODE_ENV=production
      - PORT=3002
      - TZ=America/Manaus
      - POSTGRES_HOST=postgresql
      - POSTGRES_PORT=5432
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgres
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4318/v1/traces
      - JWT_SECRET=dev-secret
      - ADMIN_USER=admin
      - ADMIN_PASS=admin

  api_fastapi:
    build:
      context: ./Backend/FastAPI
      dockerfile: Dockerfile
    container_name: FASTAPI
    restart: unless-stopped
    expose:
      - "8000"
    networks:
      - cmm_network
    environment:
      - TZ=America/Manaus

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: FRONTEND
    restart: unless-stopped
    networks:
      - cmm_network
    expose:
      - "80"
    environment:
      - NODE_ENV=production
      - VITE_PROMETHEUS_URL=/prometheus

  postgresql:
    build:
      context: ./Backend/postgresql
      dockerfile: Dockerfile
    container_name: POSTGRESQL
    restart: unless-stopped
    expose:
      - "5432"
    networks:
      - cmm_network
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - TZ=America/Manaus
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  prometheus:
    image: prom/prometheus:latest
    container_name: PROMETHEUS
    restart: unless-stopped
    expose:
      - "9090"
    volumes:
      - ./Backend/prometheus.yml:/etc/prometheus.yml:ro
    command: --config.file=/etc/prometheus.yml
    networks:
      - cmm_network

  redis:
    image: redis:latest
    container_name: REDIS
    restart: unless-stopped
    expose:
      - "6379"
    networks:
      - cmm_network
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]
    environment:
      - TZ=America/Manaus

  rabbitmq:
    image: rabbitmq:3-management
    container_name: RABBITMQ
    restart: unless-stopped
    expose:
      - "5672"
      - "15672"
    networks:
      - cmm_network
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
      - TZ=America/Manaus
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  grafana:
    image: grafana/grafana:latest
    container_name: GRAFANA
    restart: unless-stopped
    expose:
      - "3000"
    networks:
      - cmm_network
    environment:
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-piechart-panel
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
    volumes:
      - ./Backend/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./Backend/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./Backend/grafana/dashboards:/var/lib/grafana/dashboards:ro

  loki:
    image: grafana/loki:2.9.4
    container_name: LOKI
    restart: unless-stopped
    expose:
      - "3100"
    networks:
      - cmm_network

  promtail:
    image: grafana/promtail:2.9.4
    container_name: PROMTAIL
    restart: unless-stopped
    volumes:
      - /var/log:/var/log
      - ./Backend/promtail-config.yml:/etc/promtail.yml:ro
    command: -config.file=/etc/promtail.yml
    networks:
      - cmm_network

  tempo:
    image: grafana/tempo:latest
    container_name: TEMPO
    restart: unless-stopped
    expose:
      - "3200"
      - "4318"
    networks:
      - cmm_network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: CADVISOR
    restart: unless-stopped
    expose:
      - "8080"
    networks:
      - cmm_network
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:1.5.1
    container_name: NGINX-EXPORTER
    restart: unless-stopped
    command: --nginx.scrape-uri=http://nginx/nginx_status
    expose:
      - "9113"
    networks:
      - cmm_network
    depends_on:
      - nginx

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: POSTGRES-EXPORTER
    restart: unless-stopped
    environment:
      - DATA_SOURCE_NAME=postgresql://admin:admin@postgresql:5432/postgres?sslmode=disable
    expose:
      - "9187"
    networks:
      - cmm_network
    depends_on:
      - postgresql

  redis-exporter:
    image: oliver006/redis_exporter:latest
    container_name: REDIS-EXPORTER
    restart: unless-stopped
    expose:
      - "9121"
    command: ["--redis.addr=redis://redis:6379"]
    networks:
      - cmm_network
    depends_on:
      - redis

  rabbitmq-exporter:
    image: kbudde/rabbitmq-exporter:latest
    container_name: RABBITMQ-EXPORTER
    restart: unless-stopped
    expose:
      - "9419"
    environment:
      - RABBITMQ_URL=http://rabbitmq:15672
      - RABBITMQ_USER=admin
      - RABBITMQ_PASSWORD=admin
    networks:
      - cmm_network
    depends_on:
      - rabbitmq

volumes:
  postgres_data:
    driver: local
  nginx_logs:
    driver: local
  redis_data:
    driver: local
  rabbitmq_data:
    driver: local