version: '3.9'

networks:
  cmm_network:
    driver: bridge

services:
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
      no_cache: true
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - ./logs/nginx:/var/log/nginx
      # SSL certificates (optional - fallback to auto-generated if not found)
      - /opt/docker/certificados/cmm_am_gov_br_inter.crt:/etc/ssl/certs/server.crt:ro
      - /opt/docker/certificados/cmm_am_gov_br.key:/etc/ssl/certs/server.key:ro
    networks:
      - cmm_network
    depends_on:
      - frontend
      - backend
      - postgresql
    environment:
      - TZ=America/Manaus

  backend:
    build:
      context: ./api
      dockerfile: Dockerfile
      no_cache: true
    container_name: backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    networks:
      - cmm_network
    environment:
      - NODE_ENV=production
      - PORT=3001
      - TZ=America/Manaus
      - DB_HOST=postgresql
      - DB_PORT=5432
      - DB_NAME=postgres
      - DB_USER=admin
      - DB_PASSWORD=admin

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      no_cache: true
    container_name: frontend
    restart: unless-stopped
    networks:
      - cmm_network
    ports:
      - "3000:80"
    environment:
      - NODE_ENV=production

  postgresql:
    build:
      context: ./postgresql
      dockerfile: Dockerfile
      no_cache: true
    container_name: postgresql
    restart: unless-stopped
    ports:
      - "5432:5432"
    networks:
      - cmm_network
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
      - TZ=America/Manaus
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d postgres"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local