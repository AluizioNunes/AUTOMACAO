# =============================================
# NGINX CONFIGURATION - CMM AUTOMACAO FRONTEND
# Version: 3.1 - Simplified for Debug
# =============================================

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logs
    log_format main '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance b√°sico
    sendfile on;
    keepalive_timeout 65;
    
    # Frontend upstream
    upstream frontend_backend {
        server frontend:80;
    }
    
    # Backend API upstream
    upstream api_backend {
        server backend:3001;
    }
    
    # Servidor HTTP - Port 80
    server {
        listen 80 default_server;
        server_name _;
        
        # Frontend React
        location / {
            proxy_pass http://frontend_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        
        # Backend API
        location /api/ {
            proxy_pass http://api_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check
        location /health {
            return 200 'Nginx HTTP OK';
            add_header Content-Type text/plain;
        }
    }
    
    # Servidor HTTPS - Port 443
    server {
        listen 443 ssl default_server;
        server_name _;
        
        # HTTP/2
        http2 on;
        
        # SSL Configuration
        ssl_certificate /etc/ssl/certs/server.crt;
        ssl_certificate_key /etc/ssl/certs/server.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains" always;
        
        # Frontend React
        location / {
            proxy_pass http://frontend_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Backend API
        location /api/ {
            proxy_pass http://api_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check
        location /health {
            return 200 'Nginx HTTPS OK';
            add_header Content-Type text/plain;
        }
    }
    
    # Servidor Admin - Port 8080
    server {
        listen 8080;
        server_name _;
        
        location / {
            return 200 'Nginx Admin OK';
            add_header Content-Type text/plain;
        }
    }
}