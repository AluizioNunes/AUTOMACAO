# =============================================
# NGINX CONFIGURATION - CMM AUTOMACAO PLATFORM
# Version: 2.0
# Updated: 2025-08-26
# =============================================

# Configuração global do Nginx
user nginx;
worker_processes ${NGINX_WORKER_PROCESSES:-auto};
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

# Load modules
load_module modules/ngx_http_realip_module.so;

events {
    worker_connections ${NGINX_WORKER_CONNECTIONS:-2048};
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    # =========================================
    # CONFIGURAÇÕES BÁSICAS
    # =========================================
    
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Charset padrão
    charset utf-8;
    
    # Server tokens
    server_tokens off;
    
    # =========================================
    # LOGGING CONFIGURATION
    # =========================================
    
    # Formato de log detalhado
    log_format main_detailed 
        '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $body_bytes_sent '
        '"$http_referer" "$http_user_agent" '
        '"$http_x_forwarded_for" '
        'rt=$request_time '
        'uct="$upstream_connect_time" '
        'uht="$upstream_header_time" '
        'urt="$upstream_response_time" '
        'host="$host" '
        'scheme="$scheme" '
        'request_id="$request_id"';
    
    # Formato de log para APIs
    log_format api_format 
        '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $body_bytes_sent '
        'rt=$request_time '
        'api_endpoint="$uri" '
        'method="$request_method" '
        'user_agent="$http_user_agent"';
    
    # Logs principais
    access_log /var/log/nginx/access.log main_detailed;
    error_log  /var/log/nginx/error.log warn;
    
    # =========================================
    # PERFORMANCE OPTIMIZATION
    # =========================================
    
    # File handling
    sendfile            on;
    sendfile_max_chunk  1m;
    tcp_nopush          on;
    tcp_nodelay         on;
    
    # Timeouts
    keepalive_timeout   65;
    keepalive_requests  1000;
    client_header_timeout 60s;
    client_body_timeout 60s;
    send_timeout 60s;
    
    # Buffer sizes
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    client_max_body_size 50M;
    
    # Hash tables
    types_hash_max_size 4096;
    server_names_hash_bucket_size 128;
    
    # =========================================
    # GZIP COMPRESSION
    # =========================================
    
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/csv
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        application/rdf+xml
        image/svg+xml
        font/truetype
        font/opentype
        application/font-woff
        application/font-woff2;
    
    gzip_disable "msie6";
    
    # =========================================
    # SECURITY HEADERS
    # =========================================
    
    # Security headers globais
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Content Security Policy (ajustar conforme necessário)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-ancestors 'self';" always;
    
    # =========================================
    # RATE LIMITING
    # =========================================
    
    # Zonas de rate limiting
    limit_req_zone $binary_remote_addr zone=api:20m rate=30r/m;
    limit_req_zone $binary_remote_addr zone=login:10m rate=5r/m;
    limit_req_zone $binary_remote_addr zone=general:20m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=static:10m rate=200r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;
    
    # =========================================
    # CACHE CONFIGURATION
    # =========================================
    
    # Proxy cache path
    proxy_cache_path /var/cache/nginx/proxy
        levels=1:2
        keys_zone=proxy_cache:10m
        max_size=1g
        inactive=60m
        use_temp_path=off;
    
    # FastCGI cache path  
    fastcgi_cache_path /var/cache/nginx/fastcgi
        levels=1:2
        keys_zone=fastcgi_cache:10m
        max_size=500m
        inactive=30m
        use_temp_path=off;
    
    # =========================================
    # UPSTREAM CONFIGURATIONS
    # =========================================
    
    # Backend API upstream
    upstream api_backend {
        least_conn;
        server ${BACKEND_HOST:-backend}:${BACKEND_PORT:-3001} max_fails=3 fail_timeout=30s weight=1;
        # Adicionar mais servidores se necessário
        # server backend2:3001 max_fails=3 fail_timeout=30s weight=1;
        
        keepalive 32;
        keepalive_requests 1000;
        keepalive_timeout 60s;
    }
    
    # Grafana upstream
    upstream grafana_backend {
        least_conn;
        server ${GRAFANA_HOST:-grafana}:${GRAFANA_PORT:-4000} max_fails=3 fail_timeout=30s weight=1;
        
        keepalive 16;
        keepalive_requests 500;
        keepalive_timeout 60s;
    }
    
    # Frontend upstream (se necessário)
    upstream frontend_backend {
        server ${FRONTEND_HOST:-frontend}:${FRONTEND_PORT:-80} max_fails=2 fail_timeout=20s;
        keepalive 8;
    }
    
    # =========================================
    # REAL IP CONFIGURATION
    # =========================================
    
    # Configuração para IPs reais (ajustar conforme load balancers)
    set_real_ip_from 172.0.0.0/8;
    set_real_ip_from 10.0.0.0/8;
    set_real_ip_from 192.168.0.0/16;
    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    
    # =========================================
    # MAP CONFIGURATIONS
    # =========================================
    
    # Map para definir cache control baseado no tipo de arquivo
    map $sent_http_content_type $expires {
        default                    off;
        text/html                  epoch;
        text/css                   1y;
        application/javascript     1y;
        application/json           off;
        ~image/                    1M;
        ~font/                     1y;
    }
    
    # Map para upgrade de conexão WebSocket
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    # Map para identificar bots
    map $http_user_agent $is_bot {
        default 0;
        ~*bot 1;
        ~*crawler 1;
        ~*spider 1;
        ~*scraper 1;
    }
    
    # =========================================
    # INCLUDE ADDITIONAL CONFIGS
    # =========================================
    
    include /etc/nginx/conf.d/*.conf;
    
    # =========================================
    # SERVIDOR HTTP PRINCIPAL - PORT 80
    # =========================================
    
    server {
        listen 80 default_server reuseport;
        listen [::]:80 default_server reuseport;
        server_name ${NGINX_HOST:-automacao.cmm.am.gov.br} ${SERVER_IP:-172.18.1.32} _;
        
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # Rate limiting
        limit_req zone=general burst=50 nodelay;
        limit_conn perip 20;
        
        # Expires headers
        expires $expires;
        
        # =====================================
        # LOCATIONS - SERVIÇOS REAIS
        # =====================================
        
        # API Backend - Logs separados
        location /api/ {
            access_log /var/log/nginx/api_access.log api_format;
            
            # Rate limiting específico para API
            limit_req zone=api burst=20 nodelay;
            
            # Proxy settings
            proxy_pass http://api_backend/;
            proxy_http_version 1.1;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # Swagger Documentation
        location /api/docs {
            access_log /var/log/nginx/swagger_access.log main_detailed;
            
            proxy_pass http://api_backend/api/docs;
            proxy_http_version 1.1;
            
            # Headers básicos
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Grafana Service
        location /grafana/ {
            # Rate limiting
            limit_req zone=general burst=30 nodelay;
            
            proxy_pass http://grafana_backend/;
            proxy_http_version 1.1;
            
            # Headers básicos
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Headers específicos do Grafana
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Timeouts aumentados para Grafana
            proxy_connect_timeout 15s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # Buffering otimizado
            proxy_buffering off;
            proxy_cache_bypass $http_upgrade;
            
            # Redirecionamentos
            proxy_redirect http://${GRAFANA_HOST:-grafana}:${GRAFANA_PORT:-4000}/ /grafana/;
            proxy_redirect default;
        }
        
        # =====================================
        # FRONTEND E ASSETS
        # =====================================
        
        # Assets estáticos com cache agressivo
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|otf)$ {
            access_log off;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Rate limiting para assets
            limit_req zone=static burst=100 nodelay;
            
            # Gzip especial para assets
            gzip_static on;
            
            # Security headers para assets
            add_header X-Content-Type-Options nosniff;
        }
        
        # Arquivos de manifesto e service worker
        location ~* \.(webmanifest|manifest\.json)$ {
            expires 1d;
            add_header Cache-Control "public";
        }
        
        # Frontend React - SPA routing
        location / {
            try_files $uri $uri/ /index.html;
            
            # Headers para SPA
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
        }
        
        # =====================================
        # HEALTH CHECKS E MONITORING
        # =====================================
        
        # Health check simples
        location /health {
            access_log off;
            return 200 'Nginx HTTP Server: OK\nTimestamp: $time_iso8601\nServer: $hostname\nVersion: nginx/1.28.0\n';
            add_header Content-Type text/plain;
        }
        
        # Status detalhado (acesso restrito)
        location /nginx-status {
            access_log off;
            allow 127.0.0.1;
            allow 172.0.0.0/8;
            allow 10.0.0.0/8;
            deny all;
            
            return 200 'Nginx Status: Active\nConnections: $connections_active\nAccepted: $connections_accepted\nHandled: $connections_handled\nRequests: $connections_requests\n';
            add_header Content-Type text/plain;
        }
        
        # Metrics endpoint
        location /metrics {
            access_log off;
            allow 127.0.0.1;
            allow 172.0.0.0/8;
            deny all;
            
            return 200 'Basic metrics placeholder\n';
            add_header Content-Type text/plain;
        }
        
        # =====================================
        # SECURITY LOCATIONS
        # =====================================
        
        # Negar acesso a arquivos sensíveis
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Negar acesso a arquivos de backup
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Robots.txt
        location = /robots.txt {
            access_log off;
            log_not_found off;
            return 200 "User-agent: *\nDisallow: /api/\nDisallow: /grafana/\nAllow: /\n";
        }
        
        # Favicon
        location = /favicon.ico {
            access_log off;
            log_not_found off;
            expires 1y;
        }
    }

    # =========================================
    # SERVIDOR HTTPS PRINCIPAL - PORT 443
    # =========================================
    
    server {
        listen 443 ssl http2 default_server reuseport;
        listen [::]:443 ssl http2 default_server reuseport;
        server_name ${NGINX_HOST:-automacao.cmm.am.gov.br} ${SERVER_IP:-172.18.1.32} _;
        
        root /usr/share/nginx/html;
        index index.html index.htm;
        
        # =====================================
        # SSL CONFIGURATION
        # =====================================
        
        ssl_certificate ${SSL_CERT_PATH:-/etc/ssl/certs/server.crt};
        ssl_certificate_key ${SSL_KEY_PATH:-/etc/ssl/certs/server.key};
        
        # SSL Security - Modern configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;
        
        # OCSP stapling
        ssl_stapling on;
        ssl_stapling_verify on;
        
        # HSTS
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        
        # Rate limiting
        limit_req zone=general burst=50 nodelay;
        limit_conn perip 20;
        
        # Expires headers
        expires $expires;
        
        # =====================================
        # LOCATIONS - SERVIÇOS REAIS (HTTPS)
        # =====================================
        
        # API Backend - Logs separados
        location /api/ {
            access_log /var/log/nginx/api_access_ssl.log api_format;
            
            # Rate limiting específico para API
            limit_req zone=api burst=20 nodelay;
            
            # Proxy settings
            proxy_pass http://api_backend/;
            proxy_http_version 1.1;
            
            # Headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            # WebSocket support
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Buffering
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # Swagger Documentation
        location /api/docs {
            access_log /var/log/nginx/swagger_access_ssl.log main_detailed;
            
            proxy_pass http://api_backend/api/docs;
            proxy_http_version 1.1;
            
            # Headers básicos
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Grafana Service
        location /grafana/ {
            # Rate limiting
            limit_req zone=general burst=30 nodelay;
            
            proxy_pass http://grafana_backend/;
            proxy_http_version 1.1;
            
            # Headers básicos
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Headers específicos do Grafana
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            # Timeouts aumentados para Grafana
            proxy_connect_timeout 15s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
            
            # Buffering otimizado
            proxy_buffering off;
            proxy_cache_bypass $http_upgrade;
            
            # Redirecionamentos
            proxy_redirect http://${GRAFANA_HOST:-grafana}:${GRAFANA_PORT:-4000}/ /grafana/;
            proxy_redirect default;
        }
        
        # Frontend React - SPA routing
        location / {
            try_files $uri $uri/ /index.html;
            
            # Headers para SPA
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
        }
        
        # Assets estáticos com cache agressivo
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|otf)$ {
            access_log off;
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Rate limiting para assets
            limit_req zone=static burst=100 nodelay;
            
            # Gzip especial para assets
            gzip_static on;
            
            # Security headers para assets
            add_header X-Content-Type-Options nosniff;
        }
        
        # Health check
        location /health {
            access_log off;
            return 200 'Nginx HTTPS Server: OK\nTimestamp: $time_iso8601\nServer: $hostname\nSSL: Enabled\n';
            add_header Content-Type text/plain;
        }
        
        # Status detalhado (acesso restrito)
        location /nginx-status {
            access_log off;
            allow 127.0.0.1;
            allow 172.0.0.0/8;
            allow 10.0.0.0/8;
            deny all;
            
            return 200 'Nginx HTTPS Status: Active\nSSL Protocol: $ssl_protocol\nSSL Cipher: $ssl_cipher\n';
            add_header Content-Type text/plain;
        }
    }

    # =========================================
    # SUBDOMÍNIO GRAFANA - grafana.cmm.am.gov.br
    # =========================================
    
    server {
        listen 80;
        listen 443 ssl http2;
        listen [::]:80;
        listen [::]:443 ssl http2;
        server_name grafana.cmm.am.gov.br;

        # SSL Configuration (mesmo do servidor principal)
        ssl_certificate ${SSL_CERT_PATH:-/etc/ssl/certs/server.crt};
        ssl_certificate_key ${SSL_KEY_PATH:-/etc/ssl/certs/server.key};
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # Security
        server_tokens off;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Proxy direto para Grafana
        location / {
            proxy_pass http://grafana_backend/;
            
            # Headers básicos
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Headers específicos do Grafana
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_cache_bypass $http_upgrade;
            proxy_buffering off;
            proxy_http_version 1.1;
            
            # Timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
    }

    # =========================================
    # SERVIDOR DEBUG/ADMIN - PORT 8081
    # =========================================
    
    server {
        listen 8081 default_server;
        listen [::]:8081 default_server;
        server_name _;
        
        root /usr/share/nginx/html;
        index index.html index.htm;

        # Security
        server_tokens off;
        
        # Acesso restrito por IP
        allow 127.0.0.1;
        allow 172.0.0.0/8;
        allow 10.0.0.0/8;
        deny all;

        # Frontend React
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Status detalhado do servidor
        location /status {
            access_log off;
            return 200 'Debug Server Port 8081 - Status: OK\nTimestamp: $time_iso8601\nServer: $hostname\nPID: $pid\nConnection: $connection\nRequest ID: $request_id\n';
            add_header Content-Type text/plain;
        }

        # Health check específico
        location /health {
            access_log off;
            return 200 'Debug Port Health: OK\nWorker Processes: $nginx_version\n';
            add_header Content-Type text/plain;
        }

        # Informações do nginx
        location /info {
            access_log off;
            return 200 'Nginx Version: $nginx_version\nPID: $pid\nConnection: $connection\nRequest ID: $request_id\nServer Name: $server_name\n';
            add_header Content-Type text/plain;
        }
    }

    # =========================================
    # SERVIDOR ADMIN/MONITORING - PORT 8080
    # =========================================
    
    server {
        listen 8080;
        listen [::]:8080;
        server_name _;
        
        # Security
        server_tokens off;
        
        # Acesso restrito por IP
        allow 127.0.0.1;
        allow 172.0.0.0/8;
        allow 10.0.0.0/8;
        deny all;

        # Página de administração
        location / {
            return 200 '<!DOCTYPE html>
<html>
<head><title>CMM Nginx Admin</title></head>
<body>
<h1>CMM Automação - Nginx Admin Panel</h1>
<ul>
<li><a href="/health">Health Check</a></li>
<li><a href="/status">Server Status</a></li>
<li><a href="/metrics">Metrics</a></li>
<li><a href="/logs">Logs</a></li>
</ul>
</body>
</html>';
            add_header Content-Type text/html;
        }

        # Health check administrativo
        location /health {
            access_log off;
            return 200 'Admin Panel Health: OK\nAll Services: Operational\n';
            add_header Content-Type text/plain;
        }

        # Status geral dos serviços
        location /status {
            access_log off;
            return 200 'Admin Status Dashboard\n===================\nNginx: Active\nBackend API: $upstream_status\nGrafana: $upstream_status\nTimestamp: $time_iso8601\n';
            add_header Content-Type text/plain;
        }

        # Metrics básicos
        location /metrics {
            access_log off;
            return 200 '# Nginx Basic Metrics\nnginx_connections_active $connections_active\nnginx_connections_accepted $connections_accepted\nnginx_connections_handled $connections_handled\n';
            add_header Content-Type text/plain;
        }

        # Logs recentes
        location /logs {
            access_log off;
            return 200 'Log files available:\n- /var/log/nginx/access.log\n- /var/log/nginx/error.log\n- /var/log/nginx/api_access.log\n';
            add_header Content-Type text/plain;
        }
    }
}