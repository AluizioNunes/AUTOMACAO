events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    # Configura\u00e7\u00e3o do stub_status para m\u00e9tricas
    server {
        listen 8080;
        location /stub_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            allow 172.0.0.0/8;
            deny all;
        }
        
        location / {
            return 200 'Nginx is running\n';
        }
    }

    # Configura\u00e7\u00e3o principal com HTTPS
    server {
        listen 443 ssl;
        server_name automacao.cmm.am.gov.br;
        
        ssl_certificate /etc/ssl/certs/server.crt;
        ssl_certificate_key /etc/ssl/certs/server.key;
        
        # Redirecionar /grafana para /grafana/ se não tiver a barra final
        location = /grafana {
            return 301 /grafana/;
        }
        
        # Proxy reverso EXCLUSIVO para Grafana - deve vir primeiro para ter prioridade
        location /grafana/ {
            proxy_pass http://grafana:4000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configurações adicionais para Grafana
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_cache_bypass $http_upgrade;
            
            # Evitar redirecionamentos infinitos
            proxy_redirect http://grafana:4000/ /grafana/;
            proxy_redirect default;
            
            # Ajustes para evitar problemas
            proxy_buffering off;
            proxy_http_version 1.1;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }
        
        # Redirecionar antiga rota do frontend Grafana para a nova
        location = /coregrafana {
            return 301 /coregrafana/;
        }
        
        location /coregrafana/ {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
        
        # Proxy reverso para a API de automa\u00e7\u00e3o
        location /api/ {
            proxy_pass http://automation-api:3001/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configura\u00e7\u00f5es adicionais para evitar timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Rota para health check da API
        location /api/health {
            proxy_pass http://automation-api:3001/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Proxy reverso para Prometheus
        location /prometheus/ {
            proxy_pass http://prometheus:9090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Servir o frontend React - qualquer outra rota vai para o frontend
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
        
        # Redirecionar rotas do frontend para as novas URLs
        location = /coregrafana {
            return 301 /coregrafana/;
        }
        
        location /coregrafana/ {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
        
        location = /coreprometheus {
            return 301 /coreprometheus/;
        }
        
        location /coreprometheus/ {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }
        
        # Health check
        location /health {
            return 200 'OK';
            add_header Content-Type text/plain;
        }
    }
}